{"version":3,"sources":["serviceWorker.js","Title.jsx","TableData.jsx","MyCourses.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Title","react_default","a","createElement","className","TableData","props","convertDay","weekDay","convertStartTime","start_time","convertEndTime","end_time","day","tableDataMainStyle","backgroundColor","concat","color","fontSize","display","id","style","startTime","endTime","onMouseOver","onMouseLeave","course","type","room","MyCourses","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleHTTPErrors","response","ok","Error","status","statusText","onTableMouseOver","thisDisplay","state","courses","filter","ID","setState","onTableMouseLeave","hashCode","string","length","chrs","i","charCodeAt","colorGenerator","num","rgb","r","g","push","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","index","err","return","join","bind","assertThisInitialized","_this2","fetch","then","json","result","forEach","hash","Course","courseId","objectSpread","defineProperty","catch","error","console","log","_this3","src_Title","map","src_TableData","key","Type","Day","StartTime","EndTime","Room","onTouchStart","onTouchEnd","onClick","Component","ReactDOM","render","src_MyCourses_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b952dbb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './MyCourses.css';\n\nconst Title = () => {\n\n  return (\n    <div> \n      <h2 className=\"titleStyle\">My Camosun Course Timetable</h2>\n    </div>\n  )\n}\n\nexport default Title;","import React from 'react';\nimport './MyCourses.css'\n\nconst TableData = (props) => {\n\n  const convertDay = (weekDay) => {\n    if (weekDay === 'M') {\n      return(\"monday\");\n    } else if (weekDay === 'Tu') {\n      return(\"tuesday\");\n    } else if (weekDay === 'W') {\n      return(\"wednesday\");\n    } else if (weekDay === 'Th') {\n      return(\"thursday\");\n    } else if (weekDay === 'F') {\n      return(\"friday\");\n    } else {\n      return null;\n    }\n  }\n\n  const convertStartTime = (start_time) => {\n    if (start_time === \"08:30AM\") {\n      return(\"eightThirty\");\n    } else if (start_time === \"09:00AM\") {\n      return(\"nineOclock\");\n    } else if (start_time === \"09:30AM\") {\n      return(\"nineThirty\");\n    } else if (start_time === \"10:00AM\") {\n      return(\"tenOclock\");\n    } else if (start_time === \"10:30AM\") {\n      return(\"tenThirty\");\n    } else if (start_time === \"11:00AM\") {\n      return(\"elevenOclock\");\n    } else if (start_time === \"11:30AM\") {\n      return(\"elevenThirty\");\n    } else if (start_time === \"12:00PM\") {\n      return(\"twelveOclock\");\n    } else if (start_time === \"12:30PM\") {\n      return(\"twelveThirty\");\n    } else if (start_time === \"01:00PM\") {\n      return(\"oneOclock\");\n    } else if (start_time === \"01:30PM\") {\n      return(\"oneThirty\");\n    } else if (start_time === \"02:00PM\") {\n      return(\"twoOclock\");\n    } else if (start_time === \"02:30PM\") {\n      return(\"twoThirty\");\n    } else if (start_time === \"03:00PM\") {\n      return(\"threeOclock\");\n    } else if (start_time === \"03:30PM\") {\n      return(\"threeThirty\");\n    } else if (start_time === \"04:00PM\") {\n      return(\"fourOclock\");\n    } else if (start_time === \"04:30PM\") {\n      return(\"fourThirty\");\n    } else if (start_time === \"05:00PM\") {\n      return(\"fiveOclock\");\n    } else if (start_time === \"05:30PM\") {\n      return(\"fiveThirty\");\n    } else if (start_time === \"06:00PM\") {\n      return(\"sixOclock\");\n    } else {\n      return null\n    }\n  } \n\n  const convertEndTime = (end_time) => {\n    if (end_time === \"8:20AM\") {\n      return(\"endEightThirty\");\n    } else if (end_time === \"08:50AM\") {\n      return(\"endNineOclock\");\n    } else if (end_time === \"09:20AM\") {\n      return(\"endNineThirty\");\n    } else if (end_time === \"09:50AM\") {\n      return(\"endTenOclock\");\n    } else if (end_time === \"10:20AM\") {\n      return(\"endTenThirty\");\n    } else if (end_time === \"10:50AM\") {\n      return(\"endElevenOclock\");\n    } else if (end_time === \"11:20AM\") {\n      return(\"endElevenThirty\");\n    } else if (end_time === \"11:50AM\") {\n      return(\"endTwelveOclock\");\n    } else if (end_time === \"12:20PM\") {\n      return(\"endTwelveThirty\");\n    } else if (end_time === \"12:50PM\") {\n      return(\"endOneOclock\");\n    } else if (end_time === \"01:20PM\") {\n      return(\"endOneThirty\");\n    } else if (end_time === \"01:50PM\") {\n      return(\"endTwoOclock\");\n    } else if (end_time === \"02:20PM\") {\n      return(\"endTwoThirty\");\n    } else if (end_time === \"02:50PM\") {\n      return(\"endThreeOclock\");\n    } else if (end_time === \"03:20PM\") {\n      return(\"endThreeThirty\");\n    } else if (end_time === \"03:50PM\") {\n      return(\"endFourOclock\");\n    } else if (end_time === \"04:20PM\") {\n      return(\"endFourThirty\");\n    } else if (end_time === \"04:50PM\") {\n      return(\"endFiveOclock\");\n    } else if (end_time === \"05:20PM\") {\n      return(\"endFiveThirty\");\n    } else if (end_time === \"05:50PM\") {\n      return(\"endSixOclock\");\n    } \n  } \n\n  if (props.day !== null) {\n    \n    const tableDataMainStyle = {\n      backgroundColor: `rgb(${props.color})`,\n      fontSize: '14px'\n    }\n\n    if (props.display === props.id) {\n      return (\n            <p style={tableDataMainStyle} \n              className={`tableElement ${convertDay(props.day)}\n              ${convertStartTime(props.startTime)} \n              ${convertEndTime(props.endTime)}`}\n              onMouseOver={props.onMouseOver}\n              onMouseLeave={props.onMouseLeave}\n            >\n              {props.course}<br/> \n              {props.startTime} to {props.endTime} <br/>\n              {props.type} <br/>\n              {props.room}\n            </p>\n          )\n    } else {\n      return (\n        <p style={tableDataMainStyle} \n          className={`tableElement ${convertDay(props.day)}\n          ${convertStartTime(props.startTime)} \n          ${convertEndTime(props.endTime)}`}\n          onMouseOver={props.onMouseOver}\n          onMouseLeave={props.onMouseLeave}\n        >\n          {props.course} <br/> \n          {props.startTime} to {props.endTime} \n        </p>\n      )\n    }\n  } else {\n    return null\n  }\n}\n\nexport default TableData;","import React, { Component } from 'react';\nimport Title from './Title';\nimport TableData from './TableData';\nimport './MyCourses.css';\n\nclass MyCourses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      display: {},\n      color: {}\n    };\n\n    this.onTableMouseOver = this.onTableMouseOver.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://my-json-server.typicode.com/a-bishop/timetable-server/Courses')\n    .then(response=> this.handleHTTPErrors(response))\n    .then(response=> response.json())\n    .then(result=> {\n      this.setState({\n        courses: result,\n        display: {},\n        color: {}\n      });\n      this.state.courses.forEach((course) => {\n          let hash = this.hashCode(course.Course);\n          let color = this.colorGenerator(hash);\n          let courseId = course.ID;\n          this.setState({\n            color: {...this.state.color, [courseId]: color}\n          })\n      });\n    })\n    .catch(error=> {\n      console.log(error);\n    });\n  }\n\n  handleHTTPErrors = (response) => {\n    if (!response.ok) throw Error(response.status +\n      ': ' + response.statusText);\n    return response;\n  }\n\n  onTableMouseOver = (id) => {\n    const thisDisplay = this.state.courses\n      .filter(course => course.ID === id)[0].ID;\n    this.setState({\n      display: thisDisplay\n    })\n  }\n\n  onTableMouseLeave = () => {\n    this.setState({\n      display: {}\n    })\n  }\n\n  hashCode = (string) => {\n    if (string.length === 0) return 0;\n    let chrs = 0;\n    for (let i = 1; i < string.length; i++) {\n      let chr = string.charCodeAt(i);\n      chrs += chr;\n    }\n    chrs = chrs * string.length;\n    return chrs % 255;\n  };\n\n  colorGenerator = (num) => {\n    let rgb = [];\n    let r = (num * 13) % 255; \n    let g = (num * 9) % 255; \n    rgb.push(r);\n    rgb.push(g);\n    rgb.push(num);\n    for (let [index, color] of rgb.entries()) {\n      if (color < 75) {\n        color += 50;\n      }\n      rgb[index] = color;\n    }\n    return rgb.join();\n  }\n\n  render() {\n    return (\n      <div className='myCourses'>\n          <Title />\n            <div className='timetable'>\n            <section className='timeWrapper'>\n              <div>8:30</div>\n              <div>9:00</div>\n              <div>9:30</div>\n              <div>10:00</div>\n              <div>10:30</div>\n              <div>11:00</div>\n              <div>11:30</div>\n              <div>12:00</div>\n              <div>12:30</div>\n              <div>1:00</div>\n              <div>1:30</div>\n              <div>2:00</div>\n              <div>2:30</div>\n              <div>3:00</div>\n              <div>3:30</div>\n              <div>4:00</div>\n              <div>4:30</div>\n              <div>5:00</div>\n              <div>5:30</div>\n              <div>6:00</div>\n            </section>\n              <section className='titleWrapper'>\n                <p className='timeColumn'>TIME</p>\n                <p className='monday'>MONDAY</p>\n                <p className='tuesday'>TUESDAY</p>\n                <p className='wednesday'>WEDNESDAY</p>\n                <p className='thursday'>THURSDAY</p>\n                <p className='friday'>FRIDAY</p>\n              </section>\n            {this.state.courses.map( course => \n              <TableData \n                key={course.ID} \n                id={course.ID}\n                color={this.state.color[course.ID]} \n                course={course.Course}\n                type={course.Type} \n                day={course.Day} \n                startTime={course.StartTime} \n                endTime={course.EndTime} \n                room={course.Room}\n                onMouseOver={() => this.onTableMouseOver(course.ID)}\n                onTouchStart={() => this.onTableMouseOver(course.ID)}\n                onMouseLeave={this.onTableMouseLeave}\n                onTouchEnd={this.onTableMouseLeave}\n                onClick=\"\"\n                display={this.state.display}\n              />\n            )} \n          </div>          \n        </div>\n    )\n  }\n}\n\nexport default MyCourses;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MyCourses from './MyCourses';\n\nReactDOM.render(<MyCourses />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}